{
  "version": 3,
  "sources": ["../../chart.js/src/helpers/helpers.core.ts", "../../chart.js/src/helpers/helpers.math.ts", "../../chart.js/src/helpers/helpers.collection.ts", "../../chart.js/src/helpers/helpers.extras.ts", "../../chart.js/src/helpers/helpers.easing.ts", "../../chart.js/node_modules/.pnpm/@kurkle+color@0.2.1/node_modules/@kurkle/color/dist/color.esm.js", "../../chart.js/src/helpers/helpers.color.ts", "../../chart.js/src/core/core.animations.defaults.js", "../../chart.js/src/core/core.layouts.defaults.js", "../../chart.js/src/helpers/helpers.intl.ts", "../../chart.js/src/core/core.ticks.js", "../../chart.js/src/core/core.scale.defaults.js", "../../chart.js/src/core/core.defaults.js", "../../chart.js/src/helpers/helpers.canvas.js", "../../chart.js/src/helpers/helpers.options.ts", "../../chart.js/src/helpers/helpers.config.js", "../../chart.js/src/helpers/helpers.curve.ts", "../../chart.js/src/helpers/helpers.dom.ts", "../../chart.js/src/helpers/helpers.interpolation.ts", "../../chart.js/src/helpers/helpers.rtl.ts", "../../chart.js/src/helpers/helpers.segment.js", "../../chart.js/src/core/core.animator.js", "../../chart.js/src/core/core.animation.js", "../../chart.js/src/core/core.animations.js", "../../chart.js/src/core/core.datasetController.js", "../../chart.js/src/controllers/controller.bar.js", "../../chart.js/src/controllers/controller.bubble.js", "../../chart.js/src/controllers/controller.doughnut.js", "../../chart.js/src/controllers/controller.line.js", "../../chart.js/src/controllers/controller.polarArea.js", "../../chart.js/src/controllers/controller.pie.js", "../../chart.js/src/controllers/controller.radar.js", "../../chart.js/src/controllers/controller.scatter.js", "../../chart.js/src/core/core.adapters.ts", "../../chart.js/src/core/core.interaction.js", "../../chart.js/src/core/core.layouts.js", "../../chart.js/src/platform/platform.base.js", "../../chart.js/src/platform/platform.basic.js", "../../chart.js/src/platform/platform.dom.js", "../../chart.js/src/platform/index.js", "../../chart.js/src/core/core.element.ts", "../../chart.js/src/core/core.scale.autoskip.js", "../../chart.js/src/core/core.scale.js", "../../chart.js/src/core/core.typedRegistry.js", "../../chart.js/src/core/core.registry.js", "../../chart.js/src/core/core.plugins.js", "../../chart.js/src/core/core.config.js", "../../chart.js/src/core/core.controller.js", "../../chart.js/src/elements/element.arc.ts", "../../chart.js/src/elements/element.line.js", "../../chart.js/src/elements/element.point.ts", "../../chart.js/src/elements/element.bar.js", "../../chart.js/src/plugins/plugin.colors.ts", "../../chart.js/src/plugins/plugin.decimation.js", "../../chart.js/src/plugins/plugin.filler/filler.segment.js", "../../chart.js/src/plugins/plugin.filler/filler.helper.js", "../../chart.js/src/plugins/plugin.filler/filler.options.js", "../../chart.js/src/plugins/plugin.filler/filler.target.stack.js", "../../chart.js/src/plugins/plugin.filler/simpleArc.js", "../../chart.js/src/plugins/plugin.filler/filler.target.js", "../../chart.js/src/plugins/plugin.filler/filler.drawing.js", "../../chart.js/src/plugins/plugin.filler/index.js", "../../chart.js/src/plugins/plugin.legend.js", "../../chart.js/src/plugins/plugin.title.js", "../../chart.js/src/plugins/plugin.subtitle.js", "../../chart.js/src/plugins/plugin.tooltip.js", "../../chart.js/src/scales/scale.category.js", "../../chart.js/src/scales/scale.linearbase.js", "../../chart.js/src/scales/scale.linear.js", "../../chart.js/src/scales/scale.logarithmic.js", "../../chart.js/src/scales/scale.radialLinear.js", "../../chart.js/src/scales/scale.time.js", "../../chart.js/src/scales/scale.timeseries.js", "../../chart.js/src/index.ts"],
  "sourcesContent": ["/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ActiveDataPoint, ChartEvent} from '../../types';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n", "import type {Point} from '../../types/geometric';\nimport {isFinite as isFiniteNumber} from './helpers.core';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n", "import {_capitalize} from './helpers.core';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>();\n  let i: number, ilen: number;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n", "import {type ChartMeta, type PointElement} from '../../types';\n\nimport {_limitValue} from './helpers.math';\nimport {_lookupByKey} from './helpers.collection';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply<any, TArgs, void>(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n", "import {PI, TAU, HALF_PI} from './helpers.math';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n", "/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n", "import colorLib, {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : colorLib(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : colorLib(value).saturate(0.5).darken(0.1).hexString();\n}\n", "const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n", "export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n", "\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n", "import {isArray} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {log10} from '../helpers/helpers.math';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n", "import Ticks from './core.ticks';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n", "import {getHoverColor} from '../helpers/helpers.color';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core';\nimport {applyAnimationsDefaults} from './core.animations.defaults';\nimport {applyLayoutsDefaults} from './core.layouts.defaults';\nimport {applyScaleDefaults} from './core.scale.defaults';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n", "import {isArray, isNullOrUndef} from './helpers.core';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } canvas.Chart\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n", "import defaults from '../core/core.defaults';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core';\nimport {Point, toFontString} from './helpers.canvas';\nimport type {ChartArea, FontSpec} from '../../types';\nimport type {TRBL, TRBLCorners} from '../../types/geometric';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\nexport interface CanvasFontSpec extends FontSpec {\n  string: string;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<P extends T, T extends object>(parentContext: P, context: T): P extends null ? T : P & T {\n  return Object.assign(Object.create(parentContext), context);\n}\n", "import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n", "import {almostEquals, distanceBetweenPoints, sign} from './helpers.math';\nimport {_isPointInArea} from './helpers.canvas';\nimport {ChartArea} from '../../types';\n\nexport interface SplinePoint {\n  x: number;\n  y: number;\n  skip?: boolean;\n\n  // Both Bezier and monotone interpolations have these fields\n  // but they are added in different spots\n  cp1x?: number;\n  cp1y?: number;\n  cp2x?: number;\n  cp2y?: number;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates B\u00E9zier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n", "import {ChartArea, Scale} from '../../types';\nimport Chart from '../core/core.controller';\nimport {ChartEvent} from '../types';\nimport {INFINITY} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n", "import type {Point} from '../../types/geometric';\nimport type {SplinePoint} from './helpers.curve';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n", "export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n", "import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math';\nimport {createContext} from './helpers.options';\n\n/**\n * @typedef { import(\"../elements/element.line\").default } LineElement\n * @typedef { import(\"../elements/element.point\").default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n", "import {requestAnimFrame} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import(\"./core.animation\").default } Animation\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n", "import effects from '../helpers/helpers.easing';\nimport {resolve} from '../helpers/helpers.options';\nimport {color as helpersColor} from '../helpers/helpers.color';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n", "import animator from './core.animator';\nimport Animation from './core.animation';\nimport defaults from './core.defaults';\nimport {isArray, isObject} from '../helpers/helpers.core';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n", "import Animations from './core.animations';\nimport defaults from './core.defaults';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection';\nimport {createContext, sign} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"./core.scale\").default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n", "import DatasetController from '../core/core.datasetController';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n", "import DatasetController from '../core/core.datasetController';\nimport {valueOrDefault} from '../helpers/helpers.core';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n", "import DatasetController from '../core/core.datasetController';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n", "import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n", "import DatasetController from '../core/core.datasetController';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n", "import DoughnutController from './controller.doughnut';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n", "import DatasetController from '../core/core.datasetController';\nimport {_parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n", "import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n", "/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ChartOptions} from '../../types';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n", "import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection';\nimport {getRelativePosition} from '../helpers/helpers.dom';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math';\nimport {_isPointInArea} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import(\"./core.element\").default}} InteractionItem\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n", "import {defined, each, isObject} from '../helpers/helpers.core';\nimport {toPadding} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n", "\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import(\"../core/core.config\").default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n", "/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n", "/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom';\nimport {throttled} from '../helpers/helpers.extras';\nimport {isNullOrUndef} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n", "import {_isDomSupported} from '../helpers';\nimport BasePlatform from './platform.base';\nimport BasicPlatform from './platform.basic';\nimport DomPlatform from './platform.dom';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n", "import type {AnyObject} from '../../types/basic';\nimport type {Point} from '../../types/geometric';\nimport type {Animation} from '../../types/animation';\nimport {isNumber} from '../helpers/helpers.math';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n", "import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\nimport {_factorize} from '../helpers/helpers.math';\n\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n", "import Element from './core.element';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options';\nimport {autoSkip} from './core.scale.autoskip';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n", "import {merge} from '../helpers';\nimport defaults, {overrides} from './core.defaults';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n", "import DatasetController from './core.datasetController';\nimport Element from './core.element';\nimport Scale from './core.scale';\nimport TypedRegistry from './core.typedRegistry';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n", "import registry from './core.registry';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../plugins/plugin.tooltip\").default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import(\"./core.config\").default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n", "import defaults, {overrides, descriptors} from './core.defaults';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n", "import animator from './core.animator';\nimport defaults, {overrides} from './core.defaults';\nimport Interaction from './core.interaction';\nimport layouts from './core.layouts';\nimport {_detectPlatform} from '../platform';\nimport PluginService from './core.plugins';\nimport registry from './core.registry';\nimport Config, {determineAxis, getIndexAxis} from './core.config';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import('../../types').ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../../types').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../../types').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n", "import Element from '../core/core.element';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math';\nimport {_readValueToProps} from '../helpers/helpers.options';\nimport type {ArcOptions, Point} from '../../types';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, \uD835\uDF03) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n", "import Element from '../core/core.element';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve';\nimport {valueOrDefault} from '../helpers';\n\n/**\n * @typedef { import(\"./element.point\").default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n", "import Element from '../core/core.element';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas';\nimport {\n  type CartesianParsedData,\n  type ChartArea,\n  type Point,\n  type PointHoverOptions,\n  type PointOptions,\n} from '../../types';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n", "import Element from '../core/core.element';\nimport {isObject, _isBetween, _limitValue} from '../helpers';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n", "import type {Chart, ChartConfiguration, ChartDataset} from '../types';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n}\n\ntype DatasetColorizer = (dataset: ChartDataset, i: number) => void;\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction createDefaultDatasetColorizer() {\n  return (dataset: ChartDataset, i: number) => {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n  };\n}\n\nfunction createDoughnutDatasetColorizer() {\n  let i = 0;\n\n  return (dataset: ChartDataset) => {\n    dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n  };\n}\n\nfunction createPolarAreaDatasetColorizer() {\n  let i = 0;\n\n  return (dataset: ChartDataset) => {\n    dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n  };\n}\n\nfunction getColorizer(type: string) {\n  if (type === 'doughnut' || type === 'pie') {\n    return createDoughnutDatasetColorizer();\n  } else if (type === 'polarArea') {\n    return createPolarAreaDatasetColorizer();\n  }\n  return createDefaultDatasetColorizer();\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n  },\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      type,\n      options: {elements},\n      data: {datasets}\n    } = chart.config as ChartConfiguration;\n\n    if (containsColorsDefinitions(datasets) || elements && containsColorsDefinitions(elements)) {\n      return;\n    }\n\n    const colorizer: DatasetColorizer = getColorizer(type);\n    datasets.forEach(colorizer);\n  }\n};\n", "import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n", "import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n", "/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {isArray} from '../../helpers';\nimport {_pointsFromSegments} from './filler.segment';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n", "import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core';\n\n/**\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.line').default } LineElement\n * @typedef { import('../../../types').FillTarget } FillTarget\n * @typedef { import('../../../types').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n", "/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {_isBetween} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n", "import {TAU} from '../../helpers';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n", "import {isFinite} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\nimport {_getTargetPixel, _getTargetValue} from './filler.options';\nimport {_buildStackLine} from './filler.target.stack';\nimport {simpleArc} from './simpleArc';\n\n/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n", "import {clipArea, unclipArea} from '../../helpers';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment';\nimport {_getTarget} from './filler.target';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n", "/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line';\nimport {_drawfill} from './filler.drawing';\nimport {_shouldApplyFill} from './filler.helper';\nimport {_decodeFill, _resolveTarget} from './filler.options';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n", "import defaults from '../core/core.defaults';\nimport Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {toTRBLCorners} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n", "import Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {PI, isArray, toPadding, toFont} from '../helpers';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras';\nimport {renderText} from '../helpers/helpers.canvas';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n", "import {Title} from './plugin.title';\nimport layouts from '../core/core.layouts';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n", "import Animations from '../core/core.animations';\nimport Element from '../core/core.element';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math';\nimport {createContext, drawPoint} from '../helpers';\n\n/**\n * @typedef { import(\"../platform/platform.base\").Chart } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").ActiveElement } ActiveElement\n * @typedef { import(\"../core/core.interaction\").InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n", "import Scale from '../core/core.scale';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n", "import {isNullOrUndef} from '../helpers/helpers.core';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {formatNumber} from '../helpers/helpers.intl';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n", "import {isFinite} from '../helpers/helpers.core';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {toRadians} from '../helpers';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n", "import {finiteOrDefault, isFinite} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n", "import defaults from '../core/core.defaults';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n", "import adapters from '../core/core.adapters';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection';\n\n/**\n * @typedef { import(\"../core/core.adapters\").TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import(\"../core/core.adapters\").DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n", "import TimeScale from './scale.time';\nimport {_lookupByKey} from '../helpers/helpers.collection';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n", "export * from './controllers';\nexport * from './core';\nexport * from './elements';\nexport * from './platform';\nexport * from './plugins';\nexport * from './scales';\n\nimport * as controllers from './controllers';\nimport * as elements from './elements';\nimport * as plugins from './plugins';\nimport * as scales from './scales';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n"],
  "mappings": "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",
  "names": ["noop", "uid", "id", "isNullOrUndef", "value", "isArray", "Array", "type", "Object", "prototype", "toString", "call", "slice", "isObject", "isNumberFinite", "Number", "isFinite", "finiteOrDefault", "defaultValue", "valueOrDefault", "toPercentage", "dimension", "endsWith", "parseFloat", "toDimension", "callback", "fn", "args", "thisArg", "apply", "each", "loopable", "reverse", "i", "len", "keys", "length", "_elementsEqual", "a0", "a1", "ilen", "v0", "v1", "datasetIndex", "index", "clone", "source", "map", "target", "create", "klen", "k", "isValidKey", "key", "indexOf", "_merger", "options", "tval", "sval", "merge", "sources", "merger", "current", "mergeIf", "_mergerIf", "hasOwnProperty", "keyResolvers", "v", "x", "o", "y", "_splitKey", "key", "parts", "split", "keys", "tmp", "part", "endsWith", "slice", "push", "_getKeyResolver", "obj", "k", "resolveObjectKey", "resolver", "_capitalize", "str", "charAt", "toUpperCase", "defined", "value", "isFunction", "setsEqual", "a", "b", "size", "item", "has", "_isClickEvent", "e", "type", "PI", "Math", "TAU", "PITAU", "INFINITY", "Number", "POSITIVE_INFINITY", "RAD_PER_DEG", "HALF_PI", "QUARTER_PI", "TWO_THIRDS_PI", "log10", "sign", "almostEquals", "epsilon", "abs", "niceNum", "range", "roundedRange", "round", "niceRange", "pow", "floor", "fraction", "niceFraction", "_factorize", "result", "sqrt", "i", "sort", "pop", "isNumber", "n", "isNaN", "parseFloat", "isFinite", "almostWhole", "rounded", "_setMinAndMaxByKey", "array", "target", "property", "ilen", "length", "min", "max", "toRadians", "degrees", "toDegrees", "radians", "_decimalPlaces", "isFiniteNumber", "p", "getAngleFromPoint", "centrePoint", "anglePoint", "distanceFromXCenter", "distanceFromYCenter", "radialDistanceFromCenter", "angle", "atan2", "distance", "distanceBetweenPoints", "pt1", "pt2", "_angleDiff", "_normalizeAngle", "_angleBetween", "start", "end", "sameAngleIsFullCircle", "s", "angleToStart", "angleToEnd", "startToAngle", "endToAngle", "_limitValue", "_int16Range", "_isBetween", "_lookup", "table", "cmp", "index", "hi", "lo", "mid", "_lookupByKey", "last", "ti", "_rlookupByKey", "_filterBetween", "values", "arrayEvents", "listenArrayEvents", "listener", "_chartjs", "listeners", "Object", "defineProperty", "configurable", "enumerable", "forEach", "method", "base", "args", "res", "apply", "object", "unlistenArrayEvents", "stub", "indexOf", "splice", "_arrayUnique", "items", "set", "Set", "add", "Array", "from", "requestAnimFrame", "window", "callback", "requestAnimationFrame", "throttled", "fn", "thisArg", "ticking", "args", "call", "apply", "debounce", "delay", "timeout", "clearTimeout", "setTimeout", "_toLeftRightCenter", "align", "_alignStartEnd", "start", "end", "_textX", "left", "right", "rtl", "check", "_getStartAndCountOfVisiblePoints", "meta", "points", "animationsDisabled", "pointCount", "length", "count", "_sorted", "iScale", "_parsed", "axis", "min", "max", "minDefined", "maxDefined", "getUserBounds", "_limitValue", "Math", "_lookupByKey", "lo", "getPixelForValue", "hi", "_scaleRangesChanged", "xScale", "yScale", "_scaleRanges", "newRanges", "xmin", "xmax", "ymin", "ymax", "changed", "Object", "assign", "atEdge", "t", "elasticIn", "s", "p", "pow", "sin", "TAU", "elasticOut", "effects", "linear", "easeInQuad", "easeOutQuad", "easeInOutQuad", "easeInCubic", "easeOutCubic", "easeInOutCubic", "easeInQuart", "easeOutQuart", "easeInOutQuart", "easeInQuint", "easeOutQuint", "easeInOutQuint", "easeInSine", "cos", "HALF_PI", "easeOutSine", "easeInOutSine", "PI", "easeInExpo", "easeOutExpo", "easeInOutExpo", "easeInCirc", "sqrt", "easeOutCirc", "easeInOutCirc", "easeInElastic", "easeOutElastic", "easeInOutElastic", "easeInBack", "easeOutBack", "easeInOutBack", "easeInBounce", "easeOutBounce", "m", "d", "easeInOutBounce", "color", "isPatternOrGradient", "value", "type", "toString", "colorLib", "getHoverColor", "saturate", "darken", "hexString", "numbers", "colors", "applyAnimationsDefaults", "defaults", "set", "undefined", "duration", "easing", "from", "loop", "to", "describe", "_fallback", "_indexable", "_scriptable", "name", "properties", "active", "animation", "resize", "show", "animations", "visible", "hide", "v", "applyLayoutsDefaults", "autoPadding", "padding", "top", "bottom", "intlCache", "Map", "getNumberFormat", "locale", "options", "cacheKey", "JSON", "stringify", "formatter", "get", "Intl", "NumberFormat", "formatNumber", "num", "format", "formatters", "values", "isArray", "numeric", "tickValue", "index", "ticks", "chart", "notation", "delta", "maxTick", "abs", "calculateDelta", "logDelta", "log10", "numDecimal", "floor", "minimumFractionDigits", "maximumFractionDigits", "logarithmic", "remain", "significand", "includes", "applyScaleDefaults", "display", "offset", "reverse", "beginAtZero", "bounds", "grace", "grid", "lineWidth", "drawOnChartArea", "drawTicks", "tickLength", "tickWidth", "_ctx", "tickColor", "border", "dash", "dashOffset", "width", "title", "text", "minRotation", "maxRotation", "mirror", "textStrokeWidth", "textStrokeColor", "autoSkip", "autoSkipPadding", "labelOffset", "Ticks", "minor", "major", "crossAlign", "showLabelBackdrop", "backdropColor", "backdropPadding", "route", "startsWith", "overrides", "create", "descriptors", "getScope", "node", "key", "keys", "split", "i", "n", "k", "root", "scope", "merge", "Defaults", "constructor", "_descriptors", "_appliers", "backgroundColor", "borderColor", "datasets", "devicePixelRatio", "context", "platform", "getDevicePixelRatio", "elements", "events", "font", "family", "size", "style", "lineHeight", "weight", "hover", "hoverBackgroundColor", "ctx", "hoverBorderColor", "hoverColor", "indexAxis", "interaction", "mode", "intersect", "includeInvisible", "maintainAspectRatio", "onHover", "onClick", "parsing", "plugins", "responsive", "scale", "scales", "showLine", "drawActiveElementsOnTop", "override", "targetScope", "targetName", "scopeObject", "targetScopeObject", "privateName", "defineProperties", "writable", "enumerable", "local", "target", "isObject", "valueOrDefault", "appliers", "forEach", "toFontString", "isNullOrUndef", "_measureText", "data", "gc", "longest", "string", "textWidth", "measureText", "push", "_longestText", "arrayOfThings", "cache", "garbageCollect", "save", "ilen", "j", "jlen", "thing", "nestedThing", "restore", "gcLen", "splice", "_alignPixel", "pixel", "currentDevicePixelRatio", "halfWidth", "round", "clearCanvas", "canvas", "getContext", "resetTransform", "clearRect", "height", "drawPoint", "x", "y", "drawPointLegend", "w", "xOffset", "yOffset", "cornerRadius", "xOffsetW", "yOffsetW", "pointStyle", "rotation", "radius", "rad", "RAD_PER_DEG", "translate", "rotate", "drawImage", "isNaN", "beginPath", "ellipse", "arc", "closePath", "moveTo", "TWO_THIRDS_PI", "lineTo", "QUARTER_PI", "SQRT1_2", "rect", "fill", "borderWidth", "stroke", "_isPointInArea", "point", "area", "margin", "clipArea", "clip", "unclipArea", "_steppedLineTo", "previous", "flip", "midpoint", "_bezierCurveTo", "bezierCurveTo", "cp1x", "cp2x", "cp1y", "cp2y", "renderText", "opts", "lines", "strokeWidth", "strokeColor", "line", "setRenderOpts", "backdrop", "drawBackdrop", "strokeStyle", "strokeText", "maxWidth", "fillText", "decorateText", "translation", "fillStyle", "textAlign", "textBaseline", "strikethrough", "underline", "metrics", "actualBoundingBoxLeft", "actualBoundingBoxRight", "actualBoundingBoxAscent", "actualBoundingBoxDescent", "yDecoration", "decorationWidth", "oldColor", "fillRect", "addRoundedRectPath", "h", "topLeft", "bottomLeft", "bottomRight", "topRight", "LINE_HEIGHT", "FONT_STYLE", "toLineHeight", "matches", "match", "numberOrZero", "_readValueToProps", "props", "ret", "objProps", "read", "prop", "toTRBL", "toTRBLCorners", "toPadding", "obj", "toFont", "fallback", "parseInt", "console", "warn", "resolve", "inputs", "info", "cacheable", "_addGrace", "minmax", "change", "toDimension", "keepZero", "add", "createContext", "parentContext", "_createResolver", "scopes", "prefixes", "rootScopes", "getTarget", "defined", "_resolve", "Symbol", "toStringTag", "_cacheable", "_scopes", "_rootScopes", "_getTarget", "Proxy", "deleteProperty", "_keys", "_cached", "_resolveWithPrefixes", "getOwnPropertyDescriptor", "Reflect", "getPrototypeOf", "has", "getKeysFromAllScopes", "ownKeys", "storage", "_storage", "_attachContext", "proxy", "subProxy", "descriptorDefaults", "_proxy", "_context", "_subProxy", "_stack", "Set", "setContext", "receiver", "_resolveWithContext", "allKeys", "configurable", "scriptable", "indexable", "_allKeys", "isScriptable", "isFunction", "isIndexable", "readKey", "prefix", "_capitalize", "needsSubResolver", "prototype", "hasOwnProperty", "_resolveScriptable", "_resolveArray", "Error", "Array", "join", "delete", "createSubResolver", "arr", "filter", "item", "resolver", "resolveFallback", "parent", "resolveObjectKey", "addScopes", "parentScopes", "parentFallback", "allScopes", "addScopesFromKey", "subGetTarget", "resolveKeysFromAllScopes", "_parseObjectDataRadialScale", "_parsing", "parsed", "r", "parse", "EPSILON", "Number", "getPoint", "skip", "getValueAxis", "splineCurve", "firstPoint", "middlePoint", "afterPoint", "current", "next", "d01", "distanceBetweenPoints", "d12", "s01", "s12", "fa", "fb", "monotoneAdjust", "deltaK", "mK", "pointsLen", "alphaK", "betaK", "tauK", "squaredMagnitude", "pointCurrent", "pointAfter", "almostEquals", "monotoneCompute", "valueAxis", "pointBefore", "iPixel", "vPixel", "splineCurveMonotone", "slopeDelta", "sign", "capControlPoint", "pt", "capBezierPoints", "inArea", "inAreaPrev", "inAreaNext", "_updateBezierControlPoints", "controlPoints", "spanGaps", "cubicInterpolationMode", "prev", "tension", "_isDomSupported", "document", "_getParentNode", "domNode", "parentNode", "host", "parseMaxStyle", "styleValue", "parentProperty", "valueInPixels", "indexOf", "getComputedStyle", "element", "ownerDocument", "defaultView", "getStyle", "el", "property", "getPropertyValue", "positions", "getPositionedStyle", "styles", "suffix", "result", "pos", "parseFloat", "useOffsetPos", "shadowRoot", "getCanvasPosition", "e", "touches", "source", "offsetX", "offsetY", "box", "getBoundingClientRect", "clientX", "clientY", "getRelativePosition", "event", "borderBox", "boxSizing", "paddings", "borders", "getContainerSize", "maxHeight", "container", "clientWidth", "clientHeight", "containerStyle", "containerBorder", "containerPadding", "INFINITY", "round1", "getMaximumSize", "bbWidth", "bbHeight", "aspectRatio", "margins", "containerSize", "maintainHeight", "retinaScale", "forceRatio", "forceStyle", "pixelRatio", "deviceHeight", "deviceWidth", "setTransform", "supportsEventListenerOptions", "passiveSupported", "passive", "addEventListener", "removeEventListener", "readUsedSize", "_pointInLine", "p1", "p2", "_steppedInterpolation", "_bezierInterpolation", "cp1", "cp2", "a", "b", "c", "getRightToLeftAdapter", "rectX", "setWidth", "xPlus", "leftForLtr", "itemWidth", "getLeftToRightAdapter", "_itemWidth", "getRtlAdapter", "overrideTextDirection", "direction", "original", "getPropertyPriority", "setProperty", "prevTextDirection", "restoreTextDirection", "propertyFn", "between", "_angleBetween", "compare", "_angleDiff", "normalize", "_normalizeAngle", "_isBetween", "normalizeSegment", "getSegment", "segment", "startBound", "endBound", "_boundSegment", "inside", "subStart", "prevValue", "startIsBefore", "endIsBefore", "shouldStart", "shouldStop", "_boundSegments", "segments", "sub", "findStartAndEnd", "solidSegments", "last", "cur", "stop", "_computeSegments", "segmentOptions", "_loop", "splitByStyles", "completeLoop", "_fullLoop", "doSplitByStyles", "chartContext", "_chart", "baseStyle", "readStyle", "_datasetIndex", "datasetIndex", "prevStyle", "addStyle", "l", "st", "dir", "p0", "p0DataIndex", "p1DataIndex", "styleChanged", "borderCapStyle", "borderDash", "borderDashOffset", "borderJoinStyle", "Animator", "constructor", "_request", "_charts", "Map", "_running", "_lastDate", "undefined", "_notify", "chart", "anims", "date", "type", "callbacks", "listeners", "numSteps", "duration", "forEach", "fn", "initial", "currentStep", "Math", "min", "start", "_refresh", "requestAnimFrame", "call", "window", "_update", "Date", "now", "remaining", "running", "items", "length", "i", "draw", "item", "_active", "_total", "tick", "pop", "_getAnims", "charts", "get", "complete", "progress", "set", "listen", "event", "cb", "push", "add", "has", "reduce", "acc", "cur", "max", "_duration", "stop", "cancel", "remove", "delete", "transparent", "interpolators", "boolean", "from", "to", "factor", "color", "c0", "helpersColor", "c1", "valid", "mix", "hexString", "number", "Animation", "cfg", "target", "prop", "currentValue", "resolve", "_fn", "_easing", "effects", "easing", "linear", "_start", "floor", "delay", "_loop", "loop", "_target", "_prop", "_from", "_to", "_promises", "active", "update", "elapsed", "remain", "wait", "promises", "Promise", "res", "rej", "resolved", "method", "Animations", "config", "_chart", "_properties", "configure", "isObject", "animationOptions", "Object", "keys", "defaults", "animation", "animatedProps", "getOwnPropertyNames", "key", "option", "isArray", "properties", "_animateOptions", "values", "newOptions", "options", "resolveTargetOptions", "animations", "_createAnimations", "$shared", "awaitAll", "$animations", "then", "props", "charAt", "value", "size", "assign", "animator", "anim", "all", "scaleClip", "scale", "allowedOverflow", "opts", "reverse", "end", "defaultClip", "xScale", "yScale", "x", "y", "top", "right", "bottom", "left", "toClip", "t", "r", "b", "l", "disabled", "getSortedDatasetIndices", "filterVisible", "metasets", "_getSortedDatasetMetas", "ilen", "index", "applyStack", "stack", "dsIndex", "singleMode", "mode", "datasetIndex", "otherValue", "isFinite", "sign", "convertObjectDataToArray", "data", "adata", "Array", "isStacked", "meta", "stacked", "getStackKey", "indexScale", "valueScale", "id", "getUserBounds", "minDefined", "maxDefined", "Number", "NEGATIVE_INFINITY", "POSITIVE_INFINITY", "getOrCreateStack", "stacks", "stackKey", "indexValue", "subStack", "getLastIndexInStack", "vScale", "positive", "getMatchingVisibleMetas", "updateStacks", "controller", "parsed", "_cachedMeta", "_stacks", "iScale", "iAxis", "axis", "vAxis", "itemStacks", "_top", "_bottom", "getFirstScaleId", "scales", "filter", "shift", "createDatasetContext", "parent", "createContext", "dataset", "createDataContext", "element", "dataIndex", "raw", "clearStacks", "_parsed", "isDirectUpdateMode", "cloneIfNotShared", "cached", "shared", "createStack", "canStack", "hidden", "_stacked", "DatasetController", "_ctx", "ctx", "_cachedDataOpts", "getMeta", "_type", "_parsing", "_data", "_objectData", "_sharedOptions", "_drawStart", "_drawCount", "enableOptionSharing", "supportsDecimation", "$context", "_syncList", "datasetElementType", "dataElementType", "initialize", "linkScales", "addElements", "fill", "isPluginEnabled", "console", "warn", "updateIndex", "getDataset", "chooseId", "xid", "xAxisID", "valueOrDefault", "yid", "yAxisID", "rid", "rAxisID", "indexAxis", "iid", "iAxisID", "vid", "vAxisID", "getScaleForId", "rScale", "datasets", "getDatasetMeta", "scaleID", "_getOtherScale", "reset", "_destroy", "unlistenArrayEvents", "_dataCheck", "isExtensible", "listenArrayEvents", "buildOrUpdateElements", "resetNewElements", "stackChanged", "oldStacked", "_resyncElements", "scopeKeys", "datasetScopeKeys", "scopes", "getOptionScopes", "createResolver", "getContext", "parsing", "parse", "count", "sorted", "_sorted", "prev", "parseArrayData", "parseObjectData", "parsePrimitiveData", "isNotInOrderComparedToPrev", "labels", "getLabels", "singleScale", "xAxisKey", "yAxisKey", "resolveObjectKey", "getParsed", "getDataElement", "updateRangeFromParsed", "range", "parsedValue", "NaN", "getMinMax", "otherScale", "otherMin", "otherMax", "_skip", "getAllParsedValues", "getMaxOverflow", "getLabelAndValue", "label", "getLabelForValue", "_clip", "clip", "elements", "area", "chartArea", "drawActiveElementsOnTop", "getStyle", "resolveDatasetElementOptions", "resolveDataElementOptions", "context", "_resolveElementOptions", "elementType", "cache", "cacheKey", "sharing", "defined", "datasetElementScopeKeys", "prefixes", "names", "resolveNamedOptions", "freeze", "_resolveAnimations", "transition", "datasetAnimationScopeKeys", "_cacheable", "getSharedOptions", "includeOptions", "sharedOptions", "_animationsDisabled", "_getSharedOptions", "firstOpts", "previouslySharedOptions", "updateSharedOptions", "updateElement", "_setStyle", "removeHoverStyle", "setHoverStyle", "_removeDatasetHoverStyle", "_setDatasetHoverStyle", "arg1", "arg2", "numMeta", "numData", "_insertElements", "_removeElements", "move", "arr", "updateElements", "removed", "splice", "_sync", "args", "_dataChanges", "_onDataPush", "arguments", "_onDataPop", "_onDataShift", "_onDataSplice", "newCount", "_onDataUnshift", "getAllScaleValues", "_cache", "$bar", "visibleMetas", "concat", "_arrayUnique", "sort", "a", "computeMinSampleSize", "_length", "curr", "updateMinAndPrev", "abs", "getPixelForValue", "ticks", "getPixelForTick", "computeFitCategoryTraits", "ruler", "stackCount", "thickness", "barThickness", "ratio", "isNullOrUndef", "categoryPercentage", "barPercentage", "chunk", "pixels", "computeFlexCategoryTraits", "next", "percent", "parseFloatBar", "entry", "startValue", "endValue", "barStart", "barEnd", "_custom", "parseValue", "parseArrayOrPrimitive", "isFloatBar", "custom", "barSign", "actualBase", "isHorizontal", "borderProps", "horizontal", "base", "setBorderSkipped", "edge", "borderSkipped", "enableBorderRadius", "parseEdge", "swap", "startEnd", "orig", "v1", "v2", "v", "setInflateAmount", "inflateAmount", "BarController", "iAxisKey", "vAxisKey", "obj", "bars", "getBasePixel", "_getRuler", "vpixels", "head", "_calculateBarValuePixels", "ipixels", "_calculateBarIndexPixels", "center", "height", "width", "_getStacks", "last", "grouped", "skipNull", "val", "isNaN", "indexOf", "_getStackCount", "_getStackIndex", "name", "_startPixel", "_endPixel", "baseValue", "minBarLength", "floating", "getDataVisibility", "startPixel", "getPixelForDecimal", "endPixel", "halfGrid", "getLineWidthForValue", "maxBarThickness", "Infinity", "stackIndex", "rects", "numbers", "overrides", "_index_", "offset", "grid", "_value_", "beginAtZero", "BubbleController", "radius", "points", "point", "iPixel", "vPixel", "skip", "getRatioAndOffset", "rotation", "circumference", "cutout", "ratioX", "ratioY", "offsetX", "offsetY", "TAU", "startAngle", "endAngle", "startX", "cos", "startY", "sin", "endX", "endY", "calcMax", "angle", "_angleBetween", "calcMin", "maxX", "maxY", "HALF_PI", "minX", "PI", "minY", "DoughnutController", "innerRadius", "outerRadius", "getter", "_getRotation", "toRadians", "_getCircumference", "_getRotationExtents", "isDatasetVisible", "arcs", "spacing", "getMaxBorderWidth", "getMaxOffset", "maxSize", "toPercentage", "chartWeight", "_getRingWeight", "maxWidth", "maxHeight", "maxRadius", "toDimension", "radiusLength", "_getVisibleDatasetWeightTotal", "total", "calculateTotal", "_getRingWeightOffset", "_circumference", "animateRotate", "calculateCircumference", "animationOpts", "centerX", "centerY", "animateScale", "arc", "metaData", "formatNumber", "locale", "borderAlign", "borderWidth", "hoverBorderWidth", "hoverOffset", "ringWeightOffset", "weight", "descriptors", "_scriptable", "_indexable", "aspectRatio", "plugins", "legend", "generateLabels", "pointStyle", "map", "style", "text", "fillStyle", "backgroundColor", "strokeStyle", "borderColor", "fontColor", "lineWidth", "onClick", "e", "legendItem", "toggleDataVisibility", "LineController", "line", "_dataset", "animationsDisabled", "_getStartAndCountOfVisiblePoints", "_scaleRangesChanged", "_datasetIndex", "_decimated", "showLine", "segment", "animated", "spanGaps", "maxGapLength", "isNumber", "directUpdate", "pointsCount", "prevParsed", "nullData", "border", "firstPoint", "lastPoint", "updateControlPoints", "PolarAreaController", "_parseObjectDataRadialScale", "bind", "_updateRadius", "minSize", "cutoutPercentage", "getVisibleDatasetCount", "xCenter", "yCenter", "datasetStartAngle", "getIndexAngle", "defaultAngle", "countVisibleElements", "_computeAngle", "getDistanceFromCenterForValue", "angleLines", "display", "circular", "pointLabels", "PieController", "RadarController", "_fullLoop", "pointPosition", "getPointPositionForValue", "ScatterController", "registry", "getElement", "interaction", "abstract", "Error", "DateAdapterBase", "override", "members", "prototype", "init", "formats", "format", "diff", "startOf", "endOf", "_date", "binarySearch", "metaset", "intersect", "lookupMethod", "_reversePixels", "_rlookupByKey", "_lookupByKey", "el", "getRange", "lo", "hi", "evaluateInteractionItems", "position", "handler", "getSortedVisibleDatasetMetas", "j", "getDistanceMetricForAxis", "useX", "useY", "pt1", "pt2", "deltaX", "deltaY", "sqrt", "pow", "getIntersectItems", "useFinalPosition", "includeInvisible", "isPointInArea", "evaluationFunc", "_isPointInArea", "inRange", "getNearestRadialItems", "getProps", "getAngleFromPoint", "getNearestCartesianItems", "distanceMetric", "minDistance", "getCenterPoint", "pointInArea", "distance", "getNearestItems", "getAxisItems", "rangeMethod", "intersectsItem", "modes", "getRelativePosition", "nearest", "STATIC_POSITIONS", "filterByPosition", "array", "pos", "filterDynamicPositionByAxis", "box", "sortByWeight", "v0", "wrapBoxes", "boxes", "layoutBoxes", "stackWeight", "buildStacks", "layouts", "wrap", "includes", "_stack", "placed", "setLayoutDims", "params", "vBoxMaxWidth", "hBoxMaxHeight", "layout", "fullSize", "availableWidth", "availableHeight", "buildLayoutBoxes", "centerHorizontal", "centerVertical", "leftAndTop", "rightAndBottom", "vertical", "getCombinedMax", "maxPadding", "updateMaxPadding", "boxPadding", "updateDims", "getPadding", "newWidth", "outerWidth", "newHeight", "outerHeight", "widthChanged", "w", "heightChanged", "h", "same", "other", "handleMaxPadding", "updatePos", "change", "getMargins", "marginForPositions", "positions", "margin", "fitBoxes", "refitBoxes", "refit", "changed", "setBoxDims", "placeBoxes", "userPadding", "padding", "addBox", "_layers", "z", "removeBox", "layoutItem", "minPadding", "toPadding", "verticalBoxes", "horizontalBoxes", "each", "beforeLayout", "visibleVerticalBoxCount", "BasePlatform", "acquireContext", "canvas", "releaseContext", "addEventListener", "listener", "removeEventListener", "getDevicePixelRatio", "getMaximumSize", "isAttached", "updateConfig", "BasicPlatform", "EXPANDO_KEY", "EVENT_TYPES", "touchstart", "touchmove", "touchend", "pointerenter", "pointerdown", "pointermove", "pointerup", "pointerleave", "pointerout", "isNullOrEmpty", "initCanvas", "renderHeight", "getAttribute", "renderWidth", "boxSizing", "displayWidth", "readUsedSize", "displayHeight", "eventListenerOptions", "supportsEventListenerOptions", "passive", "addListener", "node", "removeListener", "fromNativeEvent", "native", "nodeListContains", "nodeList", "contains", "createAttachObserver", "observer", "MutationObserver", "entries", "trigger", "addedNodes", "removedNodes", "observe", "document", "childList", "subtree", "createDetachObserver", "drpListeningCharts", "oldDevicePixelRatio", "onWindowResize", "dpr", "devicePixelRatio", "resize", "currentDevicePixelRatio", "listenDevicePixelRatioChanges", "unlistenDevicePixelRatioChanges", "createResizeObserver", "container", "_getParentNode", "throttled", "clientWidth", "ResizeObserver", "contentRect", "releaseObserver", "disconnect", "createProxyAndListen", "proxy", "DomPlatform", "removeAttribute", "setAttribute", "proxies", "$proxies", "handlers", "attach", "detach", "isConnected", "_detectPlatform", "_isDomSupported", "OffscreenCanvas", "Element", "tooltipPosition", "hasValue", "final", "ret", "defaultRoutes", "autoSkip", "tickOpts", "determinedMaxTicks", "determineMaxTicks", "ticksLimit", "maxTicksLimit", "majorIndices", "major", "enabled", "getMajorIndices", "numMajorIndices", "first", "newTicks", "skipMajors", "calculateSpacing", "avgMajorSpacing", "round", "tickLength", "_tickSize", "maxScale", "maxChart", "_maxLength", "evenMajorSpacing", "getEvenSpacing", "factors", "_factorize", "result", "ceil", "majorStart", "majorEnd", "len", "reverseAlign", "align", "offsetFromEdge", "sample", "numItems", "increment", "getPixelForGridLine", "offsetGridLines", "validIndex", "epsilon", "lineValue", "garbageCollect", "caches", "gc", "gcLen", "getTickMarkLength", "drawTicks", "getTitleHeight", "fallback", "font", "toFont", "lines", "lineHeight", "createScaleContext", "createTickContext", "titleAlign", "_toLeftRightCenter", "titleArgs", "titleX", "titleY", "_alignStartEnd", "positionAxisID", "Scale", "_margins", "paddingTop", "paddingBottom", "paddingLeft", "paddingRight", "labelRotation", "_range", "_gridLineItems", "_labelItems", "_labelSizes", "_longestTextCache", "_userMax", "_userMin", "_suggestedMax", "_suggestedMin", "_ticksLength", "_borderValue", "_dataLimitsCached", "setContext", "suggestedMin", "suggestedMax", "finiteOrDefault", "metas", "getTicks", "xLabels", "yLabels", "beforeUpdate", "margins", "grace", "sampleSize", "beforeSetDimensions", "setDimensions", "afterSetDimensions", "beforeDataLimits", "determineDataLimits", "afterDataLimits", "_addGrace", "beforeBuildTicks", "buildTicks", "afterBuildTicks", "samplingEnabled", "_convertTicksToLabels", "beforeCalculateLabelRotation", "calculateLabelRotation", "afterCalculateLabelRotation", "source", "afterAutoSkip", "beforeFit", "fit", "afterFit", "afterUpdate", "reversePixels", "_alignToPixels", "alignToPixels", "_callHooks", "notifyPlugins", "beforeTickToLabelConversion", "generateTickLabels", "callback", "afterTickToLabelConversion", "numTicks", "minRotation", "maxRotation", "tickWidth", "maxLabelDiagonal", "_isVisible", "labelSizes", "_getLabelSizes", "maxLabelWidth", "widest", "maxLabelHeight", "highest", "_limitValue", "title", "toDegrees", "asin", "titleOpts", "gridOpts", "titleHeight", "tickPadding", "angleRadians", "labelHeight", "mirror", "labelWidth", "_calculatePadding", "_handleMargins", "isRotated", "labelsBelowTicks", "offsetLeft", "offsetRight", "isFullSize", "_computeLabelSizes", "widths", "heights", "widestLabelSize", "highestLabelSize", "jlen", "tickFont", "fontString", "nestedLabel", "_resolveTickFontOptions", "string", "_measureText", "valueAt", "idx", "getValueForPixel", "pixel", "decimal", "_int16Range", "_alignPixel", "getDecimalForPixel", "getBaseValue", "optionTicks", "rot", "autoSkipPadding", "_computeGridLineItems", "ticksLength", "tl", "borderOpts", "axisWidth", "axisHalfWidth", "alignBorderValue", "borderValue", "alignedLineValue", "tx1", "ty1", "tx2", "ty2", "x1", "y1", "x2", "y2", "limit", "step", "optsAtIndex", "optsAtIndexBorder", "lineColor", "borderDash", "dash", "borderDashOffset", "dashOffset", "tickColor", "tickBorderDash", "tickBorderDashOffset", "_computeLabelItems", "crossAlign", "tickAndPadding", "hTickAndPadding", "textAlign", "lineCount", "textOffset", "textBaseline", "_getXAxisLabelAlignment", "_getYAxisLabelAlignment", "labelOffset", "halfCount", "strokeColor", "textStrokeColor", "strokeWidth", "textStrokeWidth", "tickTextAlign", "showLabelBackdrop", "backdrop", "labelPadding", "backdropPadding", "backdropColor", "translation", "_computeLabelArea", "drawBackground", "save", "fillRect", "restore", "findIndex", "drawGrid", "drawLine", "p1", "p2", "setLineDash", "lineDashOffset", "beginPath", "moveTo", "lineTo", "stroke", "drawOnChartArea", "drawBorder", "lastLineWidth", "drawLabels", "clipArea", "renderText", "unclipArea", "drawTitle", "tz", "gz", "bz", "axisID", "_maxDigits", "fontSize", "TypedRegistry", "scope", "create", "isForType", "isPrototypeOf", "register", "proto", "getPrototypeOf", "parentScope", "isIChartComponent", "registerDefaults", "unregister", "itemDefaults", "merge", "routeDefaults", "describe", "routes", "property", "propertyParts", "split", "sourceName", "sourceScope", "join", "parts", "targetName", "targetScope", "route", "Registry", "controllers", "_typedRegistries", "_each", "addControllers", "addPlugins", "addScales", "getController", "_get", "getPlugin", "getScale", "removeControllers", "removeElements", "removePlugins", "removeScales", "typedRegistry", "arg", "reg", "_getRegistryForType", "_exec", "itemReg", "component", "camelMethod", "_capitalize", "PluginService", "_init", "notify", "hook", "_createDescriptors", "_descriptors", "descriptor", "plugin", "callCallback", "cancelable", "invalidate", "_oldCache", "_notifyStateChanges", "allPlugins", "createDescriptors", "previousDescriptors", "some", "localIds", "local", "getOpts", "pluginOpts", "pluginScopeKeys", "scriptable", "indexable", "allKeys", "getIndexAxis", "datasetDefaults", "datasetOptions", "getAxisFromDefaultScaleID", "getDefaultScaleIDFromAxis", "axisFromPosition", "determineAxis", "scaleOptions", "toLowerCase", "mergeScaleConfig", "chartDefaults", "configScales", "chartIndexAxis", "scaleConf", "error", "_proxy", "defaultId", "defaultScaleOptions", "mergeIf", "defaultID", "initOptions", "initData", "initConfig", "keyCache", "keysCached", "Set", "cachedKeys", "generate", "addIfFound", "Config", "_config", "_scopeCache", "_resolverCache", "platform", "clearCache", "clear", "datasetType", "additionalOptionScopes", "_cachedScopes", "mainScope", "resetCache", "keyLists", "chartOptionScopes", "resolver", "subPrefixes", "getResolver", "needContext", "isFunction", "subResolver", "_attachContext", "descriptorDefaults", "resolverCache", "_createResolver", "p", "hasFunction", "isScriptable", "isIndexable", "KNOWN_POSITIONS", "positionIsHorizontal", "compare2Level", "l1", "l2", "onAnimationsComplete", "onComplete", "onAnimationProgress", "onProgress", "getCanvas", "getElementById", "instances", "getChart", "c", "moveNumericKeys", "intKey", "determineLastEvent", "lastEvent", "inChartArea", "isClick", "getDatasetArea", "Chart", "invalidatePlugins", "userConfig", "initialCanvas", "existingChart", "uid", "_options", "_aspectRatio", "_metasets", "_lastEvent", "_listeners", "_responsiveListeners", "_sortedMetasets", "_plugins", "_hiddenIndices", "attached", "_doResize", "debounce", "resizeDelay", "_initialize", "maintainAspectRatio", "responsive", "retinaScale", "bindEvents", "clearCanvas", "_resize", "_resizeBeforeDraw", "newSize", "newRatio", "onResize", "render", "ensureScalesHaveIDs", "scalesOptions", "axisOptions", "buildOrUpdateScales", "scaleOpts", "updated", "isRadial", "dposition", "dtype", "scaleType", "scaleClass", "hasUpdated", "_updateMetasets", "_destroyDatasetMeta", "slice", "_removeUnreferencedMetasets", "buildOrUpdateControllers", "newControllers", "order", "visible", "ControllerClass", "_resetElements", "animsDisabled", "_updateScales", "_checkEventBindings", "_updateHiddenIndices", "_minPadding", "autoPadding", "_updateLayout", "_updateDatasets", "_eventHandler", "_updateHoverStyles", "existingEvents", "newEvents", "events", "setsEqual", "unbindEvents", "changes", "_getUniformDataChanges", "datasetCount", "makeSet", "changeSet", "noArea", "_idx", "_updateDataset", "layers", "_drawDatasets", "_drawDataset", "useClip", "getElementsAtEventForMode", "Interaction", "setDatasetVisibility", "_updateVisibility", "hide", "show", "_stop", "destroy", "toBase64Image", "toDataURL", "bindUserEvents", "bindResponsiveEvents", "_add", "_remove", "detached", "updateHoverStyle", "prefix", "getActiveElements", "setActiveElements", "activeElements", "lastActive", "_elementsEqual", "pluginId", "replay", "hoverOptions", "hover", "deactivated", "activated", "eventFilter", "_handleEvent", "_getActiveElements", "_isClickEvent", "onHover", "version", "clipArc", "pixelMargin", "angleMargin", "closePath", "toRadiusCorners", "_readValueToProps", "parseBorderRadius", "angleDelta", "o", "borderRadius", "halfThickness", "innerLimit", "computeOuterLimit", "outerArcLimit", "outerStart", "outerEnd", "innerStart", "innerEnd", "rThetaToXY", "theta", "pathArc", "innerR", "spacingOffset", "alpha", "noSpacingInnerRadius", "noSpacingOuterRadius", "avNogSpacingRadius", "adjustedAngle", "beta", "angleOffset", "outerStartAdjustedRadius", "outerEndAdjustedRadius", "outerStartAdjustedAngle", "outerEndAdjustedAngle", "innerStartAdjustedRadius", "innerEndAdjustedRadius", "innerStartAdjustedAngle", "innerEndAdjustedAngle", "outerMidAdjustedAngle", "pCenter", "p4", "innerMidAdjustedAngle", "p8", "outerStartX", "outerStartY", "outerEndX", "outerEndY", "drawArc", "fullCircles", "borderJoinStyle", "inner", "lineJoin", "ArcElement", "chartX", "chartY", "rAdjust", "betweenAngles", "withinRadius", "_isBetween", "halfAngle", "halfRadius", "translate", "fix", "radiusOffset", "setStyle", "lineCap", "borderCapStyle", "previous", "getLineMethod", "stepped", "_steppedLineTo", "tension", "cubicInterpolationMode", "_bezierCurveTo", "pathVars", "paramsStart", "paramsEnd", "segmentStart", "segmentEnd", "outside", "pathSegment", "lineMethod", "fastPathSegment", "avgX", "countX", "prevX", "lastY", "pointIndex", "drawX", "truncX", "_getSegmentMethod", "useFastPath", "_getInterpolationMethod", "_steppedInterpolation", "_bezierInterpolation", "_pointInLine", "strokePathWithCache", "path", "_path", "Path2D", "strokePathDirect", "segments", "segmentMethod", "usePath2D", "LineElement", "_points", "_segments", "_pointsUpdated", "_updateBezierControlPoints", "_computeSegments", "interpolate", "_boundSegments", "_interpolate", "interpolated", "capBezierPoints", "hitRadius", "PointElement", "mouseX", "mouseY", "inXRange", "inYRange", "hoverRadius", "drawPoint", "getBarBounds", "bar", "half", "skipOrLimit", "parseBorderWidth", "maxW", "maxH", "toTRBL", "toTRBLCorners", "maxR", "enableBorder", "topLeft", "topRight", "bottomLeft", "bottomRight", "boundingRects", "bounds", "outer", "skipX", "skipY", "skipBoth", "hasRadius", "addNormalRectPath", "rect", "inflateRect", "amount", "refRect", "BarElement", "addRectPath", "addRoundedRectPath", "BORDER_COLORS", "BACKGROUND_COLORS", "replace", "getBorderColor", "getBackgroundColor", "createDefaultDatasetColorizer", "createDoughnutDatasetColorizer", "createPolarAreaDatasetColorizer", "getColorizer", "containsColorsDefinitions", "k", "_args", "colorizer", "lttbDecimation", "samples", "decimated", "bucketWidth", "sampledIndex", "endIndex", "maxAreaPoint", "maxArea", "nextA", "avgY", "avgRangeStart", "avgRangeEnd", "avgRangeLength", "rangeOffs", "rangeTo", "pointAx", "pointAy", "minMaxDecimation", "minIndex", "maxIndex", "startIndex", "xMin", "xMax", "dx", "lastIndex", "intermediateIndex1", "intermediateIndex2", "cleanDecimatedDataset", "defineProperty", "cleanDecimatedData", "getStartAndCountOfVisiblePointsSimplified", "pointCount", "algorithm", "beforeElementsUpdate", "xAxis", "threshold", "configurable", "enumerable", "d", "tpoints", "_findSegmentEnd", "_getBounds", "targetSegments", "tgt", "subBounds", "fillSources", "_boundSegment", "fillSource", "_getEdge", "_normalizeAngle", "_pointsFromSegments", "boundary", "linePoints", "_createBoundaryLine", "_shouldApplyFill", "_resolveTarget", "sources", "propagate", "visited", "_decodeFill", "parseFillOption", "parseFloat", "decodeTargetIndex", "firstCh", "_getTargetPixel", "_getTargetValue", "fillOption", "_buildStackLine", "sourcePoints", "linesBelow", "getLinesBelow", "addPointsBelow", "below", "unshift", "sourcePoint", "postponed", "findPoint", "pointValue", "firstValue", "lastValue", "simpleArc", "_getTarget", "getLineByIndex", "computeBoundary", "computeCircularBoundary", "computeLinearBoundary", "_drawfill", "lineOpts", "above", "doFill", "clipVertical", "clipY", "lineLoop", "src", "notShape", "clipBounds", "interpolatedLineTo", "targetLoop", "interpolatedPoint", "afterDatasetsUpdate", "$filler", "beforeDraw", "drawTime", "beforeDatasetsDraw", "beforeDatasetDraw", "getBoxSize", "labelOpts", "boxHeight", "boxWidth", "usePointStyle", "pointStyleWidth", "itemHeight", "itemsEqual", "Legend", "_added", "legendHitBoxes", "_hoveredItem", "doughnutMode", "legendItems", "columnSizes", "lineWidths", "buildLabels", "labelFont", "_computeTitleHeight", "_fitRows", "_fitCols", "hitboxes", "totalHeight", "row", "itemWidth", "measureText", "_itemHeight", "heightLimit", "totalWidth", "currentColWidth", "currentColHeight", "col", "calculateItemSize", "adjustHitBoxes", "rtl", "rtlHelper", "getRtlAdapter", "hitbox", "leftForLtr", "_draw", "defaultColor", "halfFontSize", "cursor", "drawLegendBox", "lineDash", "drawOptions", "SQRT2", "xPlus", "drawPointLegend", "yBoxTop", "xBoxLeft", "fillText", "strikethrough", "overrideTextDirection", "textDirection", "textWidth", "setWidth", "realX", "_textX", "fontLineHeight", "calculateLegendItemHeight", "restoreTextDirection", "titleFont", "titlePadding", "topPaddingPlusHalfFontSize", "_getLegendItemAt", "hitBox", "lh", "handleEvent", "isListened", "hoveredItem", "sameItem", "onLeave", "calculateItemWidth", "calculateItemHeight", "legendItemText", "_element", "afterEvent", "ci", "useBorderRadius", "startsWith", "Title", "_padding", "textSize", "_drawArgs", "fontOpts", "createTitle", "titleBlock", "WeakMap", "positioners", "average", "eventPosition", "nearestElement", "distanceBetweenPoints", "tp", "pushOrConcat", "toPush", "apply", "splitNewlines", "str", "String", "createTooltipItem", "formattedValue", "getTooltipSize", "tooltip", "body", "footer", "bodyFont", "footerFont", "titleLineCount", "footerLineCount", "bodyLineItemCount", "combinedBodyLength", "bodyItem", "before", "after", "beforeBody", "afterBody", "titleSpacing", "titleMarginBottom", "bodyLineHeight", "displayColors", "bodySpacing", "footerMarginTop", "footerSpacing", "widthPadding", "maxLineWidth", "determineYAlign", "doesNotFitWithAlign", "xAlign", "caret", "caretSize", "caretPadding", "determineXAlign", "yAlign", "chartWidth", "determineAlignment", "alignX", "alignY", "paddingAndSize", "getBackgroundPoint", "alignment", "cornerRadius", "getAlignedX", "getBeforeAfterBodyLines", "createTooltipContext", "tooltipItems", "overrideCallbacks", "defaultCallbacks", "beforeTitle", "noop", "labelCount", "afterTitle", "beforeLabel", "tooltipItem", "labelColor", "labelTextColor", "bodyColor", "labelPointStyle", "afterLabel", "beforeFooter", "afterFooter", "invokeCallbackWithFallback", "Tooltip", "opacity", "_eventPosition", "_size", "_cachedAnimations", "_tooltipItems", "dataPoints", "caretX", "caretY", "labelColors", "labelPointStyles", "labelTextColors", "getTitle", "getBeforeBody", "getBody", "bodyItems", "scoped", "getAfterBody", "getFooter", "_createItems", "itemSort", "positionAndSize", "backgroundPoint", "external", "drawCaret", "tooltipPoint", "caretPosition", "getCaretPosition", "x3", "y3", "ptX", "ptY", "pt", "titleColor", "_drawColorBox", "colorX", "rtlColorX", "yOffSet", "colorY", "multiKeyBackground", "outerX", "innerX", "strokeRect", "drawBody", "bodyAlign", "xLinePadding", "fillLineOfText", "bodyAlignForCalculation", "textColor", "drawFooter", "footerAlign", "footerColor", "tooltipSize", "quadraticCurveTo", "_updateAnimationTarget", "animX", "animY", "_willRender", "hasTooltipContent", "globalAlpha", "positionChanged", "_positionChanged", "_ignoreReplayEvents", "afterInit", "afterDraw", "_fallback", "addIfString", "addedLabels", "findOrAddLabel", "lastIndexOf", "_getLabelForValue", "CategoryScale", "_startValue", "_valueRange", "_addedLabels", "added", "generateTicks", "generationOptions", "dataRange", "MIN_SPACING", "precision", "maxTicks", "maxDigits", "includeBounds", "unit", "maxSpaces", "rmin", "rmax", "countDefined", "minSpacing", "niceNum", "niceMin", "niceMax", "numSpaces", "almostWhole", "almostEquals", "decimalPlaces", "_decimalPlaces", "relativeLabelSize", "rad", "LinearScaleBase", "_endValue", "handleTickRangeOptions", "setMin", "setMax", "minSign", "maxSign", "getTickLimit", "stepSize", "computeTickLimit", "numericGeneratorOptions", "_setMinAndMaxByKey", "LinearScale", "Ticks", "formatters", "numeric", "log10Floor", "log10", "changeExponent", "m", "isMajor", "tickVal", "steps", "rangeExp", "rangeStep", "startExp", "minExp", "exp", "significand", "lastTick", "LogarithmicScale", "_zero", "logarithmic", "getTickBackdropHeight", "measureLabelSize", "_longestText", "determineLimits", "fitWithPointLabels", "limits", "valueCount", "_pointLabels", "pointLabelOpts", "additionalAngle", "centerPointLabels", "getPointLabelContext", "getPointPosition", "drawingArea", "plFont", "hLimits", "vLimits", "updateLimits", "setCenterPoint", "_pointLabelItems", "buildPointLabelItems", "extra", "outerDistance", "pointLabelPosition", "yForAngle", "getTextAlignForAngle", "leftForTextAlign", "drawPointLabels", "backdropLeft", "backdropTop", "backdropWidth", "backdropHeight", "pathRadiusLine", "drawRadiusLine", "gridLineOpts", "createPointLabelContext", "RadialLinearScale", "leftMovement", "rightMovement", "topMovement", "bottomMovement", "angleMultiplier", "scalingFactor", "getValueForDistanceFromCenter", "scaledDistance", "pointLabel", "distanceFromCenter", "getBasePosition", "getPointLabelPosition", "rotate", "animate", "INTERVALS", "millisecond", "common", "second", "minute", "hour", "day", "week", "month", "quarter", "year", "UNITS", "sorter", "input", "adapter", "_adapter", "parser", "isoWeekday", "_parseOpts", "determineUnitForAutoTicks", "minUnit", "capacity", "interval", "MAX_SAFE_INTEGER", "determineUnitForFormatting", "determineMajorUnit", "addTick", "time", "timestamps", "_lookup", "timestamp", "setMajorTicks", "majorUnit", "ticksFromTimestamps", "TimeScale", "_unit", "_majorUnit", "_offsets", "_normalized", "adapters", "displayFormats", "normalized", "_applyBounds", "_getLabelBounds", "getLabelTimestamps", "timeOpts", "_generate", "_filterBetween", "_getLabelCapacity", "initOffsets", "offsetAfterAutoskip", "getDecimalForValue", "minor", "weekday", "hasWeekday", "getDataTimestamps", "tooltipFormat", "datetime", "_tickFormatFunction", "formatter", "minorFormat", "majorFormat", "offsets", "_getLabelSize", "ticksOpts", "tickLabelWidth", "cosRotation", "sinRotation", "tickFontSize", "exampleTime", "exampleLabel", "normalize", "table", "prevSource", "nextSource", "prevTarget", "nextTarget", "span", "TimeSeriesScale", "_table", "_minPos", "_tableRange", "_getTimestampsForTable", "buildLookupTable", "registerables"]
}
